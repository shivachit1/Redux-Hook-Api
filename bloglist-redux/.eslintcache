[{"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/index.js":"1","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/store.js":"2","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/App.js":"3","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/usersReducer.js":"4","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/blogsReducer.js":"5","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/userReducer.js":"6","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/notificationReducer.js":"7","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Notification.js":"8","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Navbar.js":"9","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/LoginForm.js":"10","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/BlogForm.js":"11","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Togglable.js":"12","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/BlogList.js":"13","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/UserList.js":"14","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/User.js":"15","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/BlogDetails.js":"16","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Blog.js":"17","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/services/blogs.js":"18","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/services/user.js":"19"},{"size":275,"mtime":1609345887000,"results":"20","hashOfConfig":"21"},{"size":668,"mtime":1609355697000,"results":"22","hashOfConfig":"21"},{"size":2263,"mtime":1609447410000,"results":"23","hashOfConfig":"21"},{"size":415,"mtime":1609355610000,"results":"24","hashOfConfig":"21"},{"size":3027,"mtime":1609370459000,"results":"25","hashOfConfig":"21"},{"size":1990,"mtime":1609355510000,"results":"26","hashOfConfig":"21"},{"size":1535,"mtime":1609372128000,"results":"27","hashOfConfig":"21"},{"size":569,"mtime":1609375038000,"results":"28","hashOfConfig":"21"},{"size":1369,"mtime":1609377663000,"results":"29","hashOfConfig":"21"},{"size":1804,"mtime":1609448783000,"results":"30","hashOfConfig":"21"},{"size":1780,"mtime":1609441461000,"results":"31","hashOfConfig":"21"},{"size":1089,"mtime":1609378702000,"results":"32","hashOfConfig":"21"},{"size":345,"mtime":1609363057000,"results":"33","hashOfConfig":"21"},{"size":1002,"mtime":1609363102000,"results":"34","hashOfConfig":"21"},{"size":814,"mtime":1609376989000,"results":"35","hashOfConfig":"21"},{"size":2440,"mtime":1609441839000,"results":"36","hashOfConfig":"21"},{"size":493,"mtime":1609379010000,"results":"37","hashOfConfig":"21"},{"size":1312,"mtime":1609370085000,"results":"38","hashOfConfig":"21"},{"size":428,"mtime":1609354974000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10w6ber",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/index.js",[],["83","84"],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/store.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/App.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/usersReducer.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/blogsReducer.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/userReducer.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/reducers/notificationReducer.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Notification.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Navbar.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/LoginForm.js",["85"],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/BlogForm.js",["86"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createNewBlog } from '../reducers/blogsReducer'\nimport { Button, Card, Form } from 'react-bootstrap';\n\nconst BlogForm = ({ toggle }) => {\n  \n  const dispatch = useDispatch()\n  const [newBlog, setNewBlog] = useState({ title:'', author:'',url:'' })\n\n  const handleChange = (e) => {\n    // any changes to input is assigned to user object\n    const { name, value } = e.target\n    setNewBlog(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n  const addBlog = async (e) => {\n    e.preventDefault()\n    // adding newly created blog to blogs from response data\n    dispatch(createNewBlog(newBlog))\n    toggle.current.toggleVisibility()\n    setNewBlog({ title:'', author:'',url:'' })\n  }\n\n  return (\n    <div>\n      <h2>Create new Blog</h2>\n      <Form onSubmit={addBlog}>\n        <Form.Group>\n        <Form.Label>Title:</Form.Label>\n          <Form.Control\n             id=\"title\"\n             name = \"title\"\n             value={newBlog.title}\n             placeholder=\"Title\"\n             onChange={handleChange}\n          />\n          <Form.Label>Author:</Form.Label>\n          <Form.Control\n             id=\"author\"\n             name = \"author\"\n             value={newBlog.author}\n             placeholder=\"Author\"\n             onChange={handleChange}\n          />\n          <Form.Label>URL:</Form.Label>\n          <Form.Control\n             id=\"url\"\n             name = \"url\"\n             value={newBlog.url}\n             placeholder=\"Url\"\n             onChange={handleChange}\n          />\n          <Button style={{marginTop:10,marginBottom:10}} variant=\"primary\" type=\"submit\">create</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\n\nexport default BlogForm\n","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Togglable.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/BlogList.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/UserList.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/User.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/BlogDetails.js",["87"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { likeBlog, removeBlog, createNewComment } from \"../reducers/blogsReducer\";\nimport { Button, Card, Container } from 'react-bootstrap';\n\nconst BlogDetails = () => {\n  const dispatch = useDispatch();\n  const blogId = useParams().id;\n  const loggedUser = useSelector((state) => state.loggedUser);\n\n  const blog = useSelector((state) =>\n    state.blogs.find((item) => item.id === blogId)\n  );\n  if (!blog) {\n    return null;\n  }\n\n  const hitLike = () => {\n    const updatingBlog = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      user: blog.user.id,\n    };\n    // updating blog with new blog data (for now Likes only)\n    dispatch(likeBlog(blog.id, updatingBlog));\n  };\n\n  const handleDeleteBlog = () => {\n    var result = window.confirm(`Remove blog ${blog.title} by ${blog.author}`);\n    if (result) {\n      dispatch(removeBlog(blog.id));\n    } else {\n      console.log(\"delete blog cancelled\");\n    }\n  }\n\n  const addComment = async (e) => {\n    e.preventDefault()\n    const comment ={\n        comment:e.target.comment.value\n    }\n    // dispatching\n    dispatch(createNewComment(blog.id, comment))\n    e.target.comment.value = ''\n  }\n\n  return (\n    <Card className = \"my-auto\" style={{padding:20}}>\n        <div>\n        <div>\n        <h4>{blog.title}</h4>\n        <a href={blog.url}>{blog.url}</a>\n        <p>\n          {blog.likes} likes\n          <Button className=\"likeButton\" variant=\"info\" onClick={hitLike}>\n            like\n          </Button>\n        </p>\n        <p>added by {blog.user.name}</p>\n        {loggedUser.username === blog.user.username ? (\n          <Button className=\"deleteButton\" variant=\"danger\" onClick={handleDeleteBlog}>\n            delete\n          </Button>\n        ) : (\n          <div></div>\n        )}\n        <div>\n          <h5>comments</h5>\n          <form onSubmit={addComment}>\n            <input name=\"comment\" placeholder=\"leave comment here\" />\n            <Button type=\"submit\" style={{marginLeft:15}} variant=\"success\">add comment</Button>\n          </form>\n\n          <ul>\n            {blog.comments.map((comment) => (\n              <li key={comment}>{comment}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n        </div>\n      \n    </Card>\n  );\n};\n\nexport default BlogDetails;\n","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/components/Blog.js",[],"/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/services/blogs.js",["88"],"import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\n// setting token for authorization after user login\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n// getting all blogs\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\n// creating new blog with sending token for authorization\nconst create = async newBlog => {\n  const config = {\n    headers:{ Authorization:token },\n  }\n  // POST request sending along with authorization header\n  const res = await axios.post(baseUrl, newBlog, config)\n  return res.data\n}\n// creating new blog comment \nconst createNewComment = async (id, comment) => {\n  \n  // POST request\n  const res = await axios.post(`${baseUrl}/${id}/comments`, comment)\n  return res.data\n}\n\n// updating blog by given id with authorization header\nconst update = (id, newBlog) => {\n  \n  const request = axios.put(`${baseUrl}/${id}`,newBlog)\n  return request.then(response => response.data)\n}\n\n// updating blog by given id with authorization header\nconst remove = (id) => {\n  const config = {\n    headers:{ Authorization:token },\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, createNewComment, update, remove, setToken }","/Volumes/BackupDrive/HelsinkiFullStackCourse/Exercise7/bloglist-redux/src/services/user.js",["89"],"import axios from 'axios'\nconst baseUrl = '/api/login'\n\n// POST request for logging user with given username and password\nconst logInUser = async user => {\n  const res = await axios.post(baseUrl,user)\n  return res.data\n}\n\n// POST request for logging user with given username and password\nconst getAllUsers = async () => {\n  const res = await axios.get('/api/users')\n  return res.data\n}\n\nexport default { logInUser, getAllUsers }",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":8,"column":9,"nodeType":"96","messageId":"97","endLine":8,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":4,"column":18,"nodeType":"96","messageId":"97","endLine":4,"endColumn":22},{"ruleId":"94","severity":1,"message":"99","line":5,"column":24,"nodeType":"96","messageId":"97","endLine":5,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":50,"column":1,"nodeType":"102","endLine":50,"endColumn":78},{"ruleId":"100","severity":1,"message":"101","line":16,"column":1,"nodeType":"102","endLine":16,"endColumn":42},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Container' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]